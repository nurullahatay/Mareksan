# ==============================================================
# = Data Source
# ==============================================================

spring.datasource.url =jdbc:mysql://eu-cdbr-west-02.cleardb.net/heroku_912de2e84ef5db9?reconnect=true&useUnicode=true&characterEncoding=utf8
spring.datasource.username =be7e7133fa2e8d
spring.datasource.password =a9897419


spring.datasource.maxActive=10
spring.datasource.maxIdle=5
spring.datasource.minIdle=2
spring.datasource.initialSize=5
# ==============================================================
# = Keep the connection alive if idle for a long time (needed in production)
# ==============================================================
spring.datasource.testWhileIdle = true
spring.datasource.validationQuery = SELECT 1

# ==============================================================
# = Show or not log for each sql query
# ==============================================================
spring.jpa.show-sql = true

# ==============================================================
# = Hibernate ddl auto (create, create-drop, update)
# ==============================================================
spring.jpa.hibernate.ddl-auto = update

# ==============================================================
# = The SQL dialect makes Hibernate generate better SQL for the chosen database
# ==============================================================
Spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.MySQL5Dialect

# ==============================================================
# = Spring Security / Queries for AuthenticationManagerBuilder
# ==============================================================


spring.queries.users-query-customer=select authorizedEMail, password, active from CUSTOMERS where authorizedEMail=?
spring.queries.roles-query-customer=select u.authorizedEMail, r.role from CUSTOMERS u inner join customer_role ur on(u.customer_id=ur.customer_id) inner join role r on(ur.role_id=r.role_id) where u.authorizedEMail=?


# ==============================================================
# = Initialize the database using data.sql script
# ==============================================================
spring.datasource.initialization-mode=always
spring.h2.console.enabled=true

# ===============================
# = DATA SOURCE
# ===============================


#spring.datasource.url = jdbc:mysql://eu-cdbr-west-02.cleardb.net/heroku_912de2e84ef5db9?reconnect=true&useUnicode=true&characterEncoding=utf8
#spring.datasource.username = be7e7133fa2e8d
#spring.datasource.password = a9897419
#spring.datasource.testWhileIdle = true
#spring.datasource.validationQuery = SELECT 1

#spring.datasource.maxActive=10
#spring.datasource.maxIdle=5
#spring.datasource.minIdle=2
#spring.datasource.initialSize=5
#spring.datasource.removeAbandoned=true

#spring.jpa.show-sql = true

#spring.jpa.hibernate.ddl-auto = update


#spring.jpa.hibernate.naming-strategy = org.hibernate.cfg.ImprovedNamingStrategy

#spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.MySQL5Dialect

#server.port=8080

#spring.thymeleaf.cache=false
#spring.thymeleaf.prefix=classpath:/templates
#spring.thymeleaf.encoding=UTF-8


spring.mandatory-file-encoding=UTF-8
spring.http.encoding.charset=UTF-8
spring.http.encoding.enabled=true

spring.datasource.sql-script-encoding=UTF-8

spring.queries.users-query=select email, password, active from user where email=?
spring.queries.roles-query=select u.email, r.role from user u inner join user_role ur on(u.user_id=ur.user_id) inner join role r on(ur.role_id=r.role_id) where u.email=?
